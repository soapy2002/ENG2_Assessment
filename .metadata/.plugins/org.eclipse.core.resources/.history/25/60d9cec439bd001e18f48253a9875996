@namespace(uri="Y3887821", prefix="Y3887821")

context Social {
    //check that the system has at least one microservice
    constraint AtLeastOneService{
        check: self.microservices.size() > 0
    }
}

context Microservice {
	
	// Check that state names consist
	// of a single character
	constraint OneCharacter {
		check: self.name.length() > 1
		message: "Microservice names must be at least character long"
	}
	
	constraint HasHTTPResource{
        check: self.httpResources.collect(e|e.method = "GET" and e.request.body.size() = 0).size() > 0
        message: "microservice needs a HTTP Resource"    
    }
}

context EventStream {
    // every eventStream should have at least one subscriber
    constraint HasAConsumer {
        check: self.consumes.size() > 0
        message: "an event stream must have at least one consumer"
    }
    
    // every eventStream should have at least one publisher
    constraint HasAProducer {
        check: self.produces.size() > 0
        message: "an event stream must have at least one producer"
    }
}